@echo off
chcp 65001 >nul
echo ===================================================
echo    CORRE√á√ÉO DE CONFIGURA√á√ÉO - BARREIRAS IOT
echo ===================================================
echo.

echo üîß Corrigindo problemas identificados...
echo.

echo [1/6] Criando arquivo .env no backend...
cd backend
if not exist .env (
    if exist .env.example (
        copy .env.example .env
        echo ‚úÖ Arquivo .env criado
    ) else (
        echo ‚ùå ERRO: .env.example n√£o encontrado
        pause
        exit /b 1
    )
) else (
    echo ‚úÖ Arquivo .env j√° existe
)

echo.
echo [2/6] Instalando depend√™ncias PHP...
if not exist vendor (
    echo Instalando depend√™ncias do Composer...
    call composer install
    if %errorlevel% neq 0 (
        echo ‚ùå ERRO: Falha ao instalar depend√™ncias PHP
        echo Tentando com --no-dev...
        call composer install --no-dev
        if %errorlevel% neq 0 (
            echo ‚ùå ERRO: Falha cr√≠tica
            pause
            exit /b 1
        )
    )
    echo ‚úÖ Depend√™ncias PHP instaladas
) else (
    echo ‚úÖ Depend√™ncias PHP j√° instaladas
)

echo.
echo [3/6] Gerando chave da aplica√ß√£o...
php artisan key:generate
echo ‚úÖ Chave gerada

echo.
echo [4/6] Instalando depend√™ncias Node.js...
cd ..\frontend
if not exist node_modules (
    echo Instalando depend√™ncias do NPM...
    call npm install
    if %errorlevel% neq 0 (
        echo ‚ùå ERRO: Falha ao instalar depend√™ncias Node.js
        echo Limpando cache do NPM...
        npm cache clean --force
        call npm install
        if %errorlevel% neq 0 (
            echo ‚ùå ERRO: Falha cr√≠tica
            pause
            exit /b 1
        )
    )
    echo ‚úÖ Depend√™ncias Node.js instaladas
) else (
    echo ‚úÖ Depend√™ncias Node.js j√° instaladas
)

echo.
echo [5/6] Compilando CSS...
if not exist css\tailwind-local.css (
    echo Compilando CSS com Tailwind...
    call npm run build:css
    if %errorlevel% neq 0 (
        echo ‚ùå ERRO: Falha ao compilar CSS
        pause
        exit /b 1
    )
    echo ‚úÖ CSS compilado
) else (
    echo ‚úÖ CSS j√° compilado
)

echo.
echo [6/6] Configurando banco de dados...
cd ..\backend

echo.
echo ‚ö†Ô∏è  CONFIGURA√á√ÉO DO BANCO DE DADOS
echo.
echo Suas configura√ß√µes atuais:
type .env | findstr "DB_"
echo.
echo Para Laragon, use estas configura√ß√µes no .env:
echo   DB_HOST=127.0.0.1
echo   DB_PORT=3306
echo   DB_DATABASE=laravel_barrier_control
echo   DB_USERNAME=root
echo   DB_PASSWORD=
echo.
echo IMPORTANTE: 
echo 1. Certifique-se de que o Laragon est√° rodando (Start All)
echo 2. Crie o banco de dados se necess√°rio
echo.

set /p "CONFIGURADO=Banco de dados est√° configurado e rodando? (s/n): "
if /i "%CONFIGURADO%"=="s" (
    echo Testando conex√£o...
    php artisan migrate:status >nul 2>&1
    if %errorlevel% neq 0 (
        echo ‚ùå N√£o foi poss√≠vel conectar ao banco
        echo Criando banco de dados...
        mysql -u root -e "CREATE DATABASE IF NOT EXISTS laravel_barrier_control;" 2>nul
        echo Executando migra√ß√µes...
        php artisan migrate:fresh --seed
        if %errorlevel% neq 0 (
            echo ‚ùå ERRO: Falha nas migra√ß√µes
            echo Execute manualmente: php artisan migrate:fresh --seed
        ) else (
            echo ‚úÖ Banco configurado com sucesso
        )
    ) else (
        echo Executando migra√ß√µes...
        php artisan migrate:fresh --seed
        echo ‚úÖ Banco configurado
    )
) else (
    echo ‚ö†Ô∏è  Configure o banco de dados e execute novamente
)

cd ..

echo.
echo ===================================================
echo    ‚úÖ CORRE√á√ÉO FINALIZADA!
echo ===================================================
echo.
echo üß™ Para testar a configura√ß√£o:
echo    teste_configuracao.bat
echo.
echo üöÄ Para iniciar o sistema:
echo    iniciar_sistema_otimizado.bat
echo.
pause