#ifndef CONFIG_H
#define CONFIG_H

// ============================================================================
// CONFIGURA√á√ÉO ESP32 - ESTA√á√ÉO BASE - TEMPLATE
// ============================================================================
// 
// INSTRU√á√ïES DE CONFIGURA√á√ÉO:
// 1. Copie este ficheiro para config.h: cp config.h.example config.h
// 2. Altere os valores conforme o seu ambiente
// 3. NUNCA commite o ficheiro config.h real no Git
// 4. Teste a configura√ß√£o antes de fazer upload
//
// ============================================================================

// ============================================================================
// üåê CONFIGURA√á√ïES DE REDE WIFI
// ============================================================================

// WiFi - ALTERE PARA AS SUAS CREDENCIAIS
#define WIFI_SSID "SUA_REDE_WIFI_AQUI"           // Nome da sua rede WiFi
#define WIFI_PASSWORD "SUA_SENHA_WIFI_AQUI"      // Senha da sua rede WiFi
#define WIFI_TIMEOUT_MS 15000                    // Timeout de conex√£o (15 segundos)

// Configura√ß√µes avan√ßadas WiFi
#define WIFI_MAX_RETRY 3                         // M√°ximo tentativas de conex√£o
#define WIFI_RECONNECT_INTERVAL 30000            // Intervalo reconex√£o (30s)

// ============================================================================
// üñ•Ô∏è CONFIGURA√á√ïES DO SERVIDOR API
// ============================================================================

// API Server - ALTERE PARA O SEU SERVIDOR
#define API_HOST "192.168.1.100"                 // IP do seu servidor Laravel
#define API_PORT 8000                            // Porta do servidor (normalmente 8000)
#define API_BASE_PATH "/api/v1"                  // Caminho base da API
#define API_TIMEOUT_MS 5000                      // Timeout HTTP (5 segundos)

// Configura√ß√µes avan√ßadas API
#define MAX_API_RETRY 2                          // M√°ximo tentativas API
#define API_RETRY_DELAY 1000                     // Delay entre tentativas (1s)

// Autentica√ß√£o API (se necess√°rio)
// #define API_TOKEN "seu_token_aqui"            // Token de autentica√ß√£o
// #define API_USE_HTTPS false                   // Usar HTTPS (true/false)

// ============================================================================
// üì° CONFIGURA√á√ïES LORA
// ============================================================================

// Frequ√™ncia e modula√ß√£o
#define LORA_FREQUENCY 433E6                     // Frequ√™ncia LoRa (433MHz)
#define LORA_BANDWIDTH 125E3                     // Largura de banda (125kHz)
#define LORA_SPREADING_FACTOR 7                  // Fator de espalhamento (7-12)
#define LORA_CODING_RATE 5                       // Taxa de codifica√ß√£o (4/5)
#define LORA_TX_POWER 20                         // Pot√™ncia TX (20dBm)
#define LORA_SYNC_WORD 0x12                      // Palavra de sincroniza√ß√£o

// Configura√ß√µes avan√ßadas LoRa
#define LORA_PREAMBLE_LENGTH 8                   // Comprimento pre√¢mbulo
#define LORA_CRC_ON true                         // Habilitar CRC
#define LORA_IMPLICIT_HEADER false               // Cabe√ßalho impl√≠cito

// ============================================================================
// üîå CONFIGURA√á√ïES DE HARDWARE (ESP32 Heltec V2)
// ============================================================================

// Pinos LoRa
#define LORA_SS 18                               // Chip Select (CS)
#define LORA_RST 14                              // Reset
#define LORA_DIO0 26                             // DIO0 (IRQ)

// Display OLED
#define SCREEN_WIDTH 128                         // Largura do display
#define SCREEN_HEIGHT 64                         // Altura do display
#define OLED_RESET 16                            // Reset do display
#define OLED_SDA 4                               // SDA (I2C)
#define OLED_SCL 15                              // SCL (I2C)
#define OLED_ADDRESS 0x3C                        // Endere√ßo I2C

// LEDs de status (simula√ß√£o de barreiras)
#define LED_BARREIRA_NORTE 25                    // LED barreira norte
#define LED_BARREIRA_SUL 2                       // LED barreira sul
#define LED_STATUS 25                            // LED de status geral

// Bot√µes (se houver)
#define BUTTON_BOOT 0                            // Bot√£o BOOT
#define BUTTON_USER 12                           // Bot√£o do utilizador

// ============================================================================
// üéØ CONFIGURA√á√ïES DO SISTEMA
// ============================================================================

// Identifica√ß√£o do dispositivo
#define DEVICE_ID "BASE_001"                     // ID √∫nico do dispositivo
#define FIRMWARE_VERSION "2.0.0"                // Vers√£o do firmware
#define HARDWARE_VERSION "ESP32_HELTEC_V2"      // Vers√£o do hardware

// Sensores de dire√ß√£o (IDs dos sensores remotos)
#define SENSOR_ID_NORTE_ENTRADA "DIR_N_1"       // Sensor norte entrada
#define SENSOR_ID_NORTE_SAIDA   "DIR_N_2"       // Sensor norte sa√≠da
#define SENSOR_ID_SUL_ENTRADA   "DIR_S_1"       // Sensor sul entrada
#define SENSOR_ID_SUL_SAIDA     "DIR_S_2"       // Sensor sul sa√≠da

// ============================================================================
# ‚è±Ô∏è TIMEOUTS E INTERVALOS
// ============================================================================

// Timeouts do sistema
#define DETECTION_SEQUENCE_TIMEOUT 30000        // Timeout sequ√™ncia detec√ß√£o (30s)
#define PENDING_DETECTION_CLEAR_TIMEOUT 60000   // Timeout limpeza pendentes (60s)
#define BARRIER_AUTO_CLOSE_TIME 5000            // Tempo auto-fechamento barreira (5s)

// Intervalos de comunica√ß√£o
#define HEARTBEAT_INTERVAL 30000                // Intervalo heartbeat (30s)
#define TELEMETRY_INTERVAL 10000                // Intervalo telemetria (10s)
#define DISPLAY_UPDATE_INTERVAL 1000            // Atualiza√ß√£o display (1s)

// Intervalos de manuten√ß√£o
#define OTA_CHECK_INTERVAL 3600000              // Verifica√ß√£o OTA (1 hora)
#define MEMORY_CHECK_INTERVAL 60000             // Verifica√ß√£o mem√≥ria (1 minuto)

// ============================================================================
// üîß CONFIGURA√á√ïES DE DEBUG E DESENVOLVIMENTO
// ============================================================================

// Debug serial
#define DEBUG_SERIAL true                       // Habilitar debug serial
#define DEBUG_LORA false                        // Debug espec√≠fico LoRa
#define DEBUG_API false                         // Debug espec√≠fico API
#define DEBUG_WIFI false                        // Debug espec√≠fico WiFi
#define SERIAL_BAUD_RATE 115200                 // Velocidade serial

// Configura√ß√µes de desenvolvimento
#define ENABLE_SERIAL_COMMANDS true             // Comandos via serial
#define ENABLE_TEST_MODE false                  // Modo de teste
#define SIMULATE_SENSORS false                  // Simular sensores

// ============================================================================
// üõ°Ô∏è CONFIGURA√á√ïES DE SEGURAN√áA E ROBUSTEZ
// ============================================================================

// Thresholds de sinal
#define MIN_RSSI_THRESHOLD -100                 // RSSI m√≠nimo para detec√ß√£o
#define MAX_RSSI_THRESHOLD -30                  // RSSI m√°ximo v√°lido
#define MIN_SNR_THRESHOLD -10                   // SNR m√≠nimo
#define AOA_CONFIDENCE_THRESHOLD 0.7            // Confian√ßa m√≠nima AoA

// Watchdog (para produ√ß√£o)
#define ENABLE_WATCHDOG false                   // Habilitar watchdog
#define WATCHDOG_TIMEOUT 30000                  // Timeout watchdog (30s)

// Criptografia LoRa (se implementada)
// #define LORA_ENCRYPTION_KEY "chave_16_bytes"  // Chave de criptografia
// #define LORA_USE_ENCRYPTION false             // Habilitar criptografia

// ============================================================================
// üé® CONFIGURA√á√ïES DE DISPLAY
// ============================================================================

// Configura√ß√µes visuais
#define DISPLAY_CONTRAST 255                    // Contraste do display (0-255)
#define DISPLAY_TIMEOUT 0                       // Timeout display (0=sempre ligado)
#define DISPLAY_FLIP false                      // Inverter display
#define DISPLAY_FONT_SIZE 1                     // Tamanho da fonte

// Configura√ß√µes de interface
#define SHOW_RSSI_ON_DISPLAY true               // Mostrar RSSI no display
#define SHOW_IP_ON_DISPLAY true                 // Mostrar IP no display
#define SHOW_UPTIME_ON_DISPLAY false            // Mostrar uptime no display

// ============================================================================
// üìä CONFIGURA√á√ïES DE TELEMETRIA
// ============================================================================

// Buffer e envio
#define TELEMETRY_BUFFER_SIZE 10                // Tamanho buffer telemetria
#define TELEMETRY_BATCH_SIZE 5                  // Tamanho lote envio
#define TELEMETRY_MAX_RETRIES 3                 // M√°ximo tentativas envio

// Dados a coletar
#define COLLECT_RSSI true                       // Coletar RSSI
#define COLLECT_SNR true                        // Coletar SNR
#define COLLECT_TEMPERATURE false               // Coletar temperatura
#define COLLECT_BATTERY false                   // Coletar n√≠vel bateria
#define COLLECT_MEMORY true                     // Coletar uso mem√≥ria
#define COLLECT_WIFI_QUALITY true               // Coletar qualidade WiFi

// ============================================================================
// üöÄ CONFIGURA√á√ïES DE PRODU√á√ÉO
// ============================================================================
// 
// Para ambiente de produ√ß√£o, considere alterar:
// - DEBUG_SERIAL = false (desabilitar debug)
// - ENABLE_WATCHDOG = true (habilitar watchdog)
// - LORA_USE_ENCRYPTION = true (habilitar criptografia)
// - API_USE_HTTPS = true (usar HTTPS)
// - Configurar OTA para atualiza√ß√µes remotas
// - Otimizar intervalos para economia de energia
// - Habilitar modo de baixo consumo quando apropriado
//
// ============================================================================

// OTA (Over-The-Air Updates) - Para produ√ß√£o
// #define ENABLE_OTA true                       // Habilitar OTA
// #define OTA_PASSWORD "senha_ota_segura"       // Senha OTA

// Economia de Energia - Para dispositivos a bateria
// #define ENABLE_DEEP_SLEEP false               // Habilitar deep sleep
// #define DEEP_SLEEP_DURATION 60000000          // Dura√ß√£o deep sleep (60s)
// #define LIGHT_SLEEP_DURATION 1000             // Dura√ß√£o light sleep (1s)

#endif // CONFIG_H

// ============================================================================
// üìã EXEMPLOS DE CONFIGURA√á√ÉO POR AMBIENTE
// ============================================================================
//
// DESENVOLVIMENTO EM CASA:
// #define WIFI_SSID "WiFi_Casa"
// #define WIFI_PASSWORD "senha_casa"
// #define API_HOST "192.168.1.100"
// #define DEBUG_SERIAL true
//
// TESTE NO ESCRIT√ìRIO:
// #define WIFI_SSID "WiFi_Escritorio"
// #define WIFI_PASSWORD "senha_escritorio"
// #define API_HOST "192.168.10.50"
// #define DEBUG_SERIAL true
//
// PRODU√á√ÉO NO LOCAL:
// #define WIFI_SSID "WiFi_Producao"
// #define WIFI_PASSWORD "senha_producao_segura"
// #define API_HOST "10.0.0.100"
// #define DEBUG_SERIAL false
// #define ENABLE_WATCHDOG true
//
// ============================================================================

// ============================================================================
// ‚ö†Ô∏è NOTAS IMPORTANTES DE SEGURAN√áA
// ============================================================================
//
// üîí NUNCA commite o ficheiro config.h real
// üåê Use credenciais WiFi seguras
// üõ°Ô∏è Configure firewall no servidor API
// üîë Use tokens de autentica√ß√£o em produ√ß√£o
// üì° Configure criptografia LoRa para dados sens√≠veis
// üîß Desabilite debug em produ√ß√£o
// üìä Monitore logs para atividade suspeita
//
// ============================================================================